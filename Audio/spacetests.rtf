{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset238 Inconsolata;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red0\green115\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 // space tests\cf3 \
(\
~abus = \cf4 Bus\cf3 .audio(~serv, 4);\
~rbus = \cf4 Bus\cf3 .audio(~serv);\
~agrp = \cf4 Group\cf3 ();\
~rev = \cf4 Synth\cf3 .after(~agrp, \cf5 \\verb\cf3 , [\cf5 \\in\cf3 , ~rbus, \cf5 \\rtime\cf3 , 2, \cf5 \\damp\cf3 , 0.5, \cf5 \\inbw\cf3 , 0.5, \cf5 \\spr\cf3 , 10, \
	\cf5 \\dry\cf3 , 0.0, \cf5 \\early\cf3 , 0.4, \cf5 \\tail\cf3 , 1.0, \cf5 \\amp\cf3 , 0.5]);	\
\cf2 //~decode = Synth.after(~rev, \\bf2decode, [\\bus, ~abus, \\amp, 1.0]);\cf3 \
~decode = \cf4 Synth\cf3 .after(~rev, \cf5 \\bfcollect\cf3 , [\cf5 \\bus\cf3 , ~abus, \cf5 \\amp\cf3 , 1.0]);\
~bps = 140 / 60;\
~div = ~bps.reciprocal;\
\
~eq = \cf4 MasterEQ\cf3 (4)\
\
)\
\
(\
~noise = \cf4 Pbind\cf3 (\
	\cf5 \\atsdata\cf3 , \cf4 Pstutter\cf3 (\cf4 Pbrown\cf3 (1, 5, 1, \cf4 inf\cf3 ), \
		\cf4 Pseq\cf3 (~atsdata, \cf4 inf\cf3 )),\
	\cf5 \\instrument\cf3 , \cf4 Prand\cf3 (~noisedefs.select(\{\cf4 |defname|\cf3  \
			(defname.asString.contains(\cf6 "logistic"\cf3 )).or(defname.asString.contains(\cf6 "dust"\cf3 )) \
		\}), \cf4 inf\cf3 ), \
	\cf5 \\group\cf3 , ~agrp, \
	\cf5 \\addAction\cf3 , \cf5 \\addToHead\cf3 , \
	\cf5 \\out\cf3 , ~abus, \
	\cf5 \\efx\cf3 , ~rbus, \
	\cf5 \\aamp\cf3 , 0.4, \cf2 //Pseq(Array.geom(120, 0.001, 1.0597), 1), \cf3 \
	\cf5 \\eamp\cf3 , 1.0,\
	\cf5 \\samp\cf3 , 0.3, \
	\cf5 \\dur\cf3 , \cf4 Punop\cf3 (\cf5 \\dur\cf3 , \cf4 Pkey\cf3 (\cf5 \\atsdata\cf3 )) * \cf4 Pseq\cf3 ([0.5, 0.25, 1.0], \cf4 inf\cf3 ), \
	\cf5 \\rq\cf3 , 0.3,\
	\cf5 \\buffer\cf3 , \cf4 Punop\cf3 (\cf5 \\buffer\cf3 , \cf4 Pkey\cf3 (\cf5 \\atsdata\cf3 )), \
	\cf5 \\rate\cf3 , 1.0 / \cf4 Pkey\cf3 (\cf5 \\dur\cf3 ), \
	\cf5 \\azm\cf3 , \cf4 Pwhite\cf3 (-pi, pi, \cf4 inf\cf3 ), \
	\cf5 \\elv\cf3 , 0, \cf5 \\rho\cf3 , \cf4 Pwhite\cf3 (0.1, 0.6, \cf4 inf\cf3 ), \
	\cf5 \\clip\cf3 , 0.8, \
	\cf5 \\delta\cf3 , \cf4 Pwrand\cf3 ( \cf4 Array\cf3 .series(8, 0.125, 0.125), (1..8).normalizeSum, \cf4 inf\cf3  ),\
	\cf5 \\env\cf3 , [\cf4 Env\cf3 ([0.001, 1.0, 1.0, 0.001], [0.01, 0.39, 0.6], \cf5 \\sine\cf3 )],\
	\cf5 \\azmbase\cf3 , \cf4 Pseq\cf3 ((0.125,0.25..1) * pi, \cf4 inf\cf3 ),\
	\cf5 \\azm\cf3 , \cf4 Pfunc\cf3 (\{\cf4 |ev|\cf3 \
		[\cf4 Env\cf3 ([ev.azmbase, ev.azmbase + 0.25pi], [1], \cf5 \\sine\cf3 )]\
	\}),\
	\cf5 \\rho\cf3 , \cf4 Pfunc\cf3 (\{\cf4 |ev|\cf3 \
		[[\cf4 Env\cf3 ([1, 1], [1]), \cf4 Env\cf3 ([0.1, 0.1], [1])].choose]\
	\}),\
	\cf5 \\elv\cf3 , \cf4 Pfunc\cf3 (\{\cf4 |ev|\cf3 \
		\cf4 var\cf3  val;\
		val = [-0.25, 0.25].choose * pi;\
		[\cf4 Env\cf3 ([val, val], [1])]\
	\}),\
	\cf5 \\debug\cf3 , \cf4 Pfunc\cf3 (\{\cf4 |ev|\cf3  \
		\cf6 "noise _:_ "\cf3 .post; \
		ev.instrument.post; \
		\cf6 " _:_ "\cf3 .post; \
		ev.atsdata.file.post;\
		\cf6 " _:_ "\cf3 .post; 		\
		ev.atsdata.nparts.postln; \
	\}) \
);\
\
)\
\
~play = ~noise.play\
\
~play.stop\
\
}