{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset238 Inconsolata;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red0\green115\blue0;
\red191\green0\blue0;\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 ~rule = \cf3 Continuous\cf2 (add: 0.95, wrap: \cf3 false\cf2 ).weights_([1, 3, 1, 2].mirror2);\
~wrld = \cf3 XWorld\cf2 .newSetCells(16, \cf3 XSeeds\cf2 .randRectCont(0, 0, 15, 15), \
	\cf3 Habitat\cf2 .newMoore, ~rule);\
\cf3 PenDisplay\cf2 (~wrld, ~rule, \cf3 Array\cf2 .with(\cf3 Color\cf2 .black), 20, 0.1)\
\
\cf3 SynthDef\cf2 (\cf4 \\pluck\cf2 , \{\cf3 |in, dec, amp|\cf2 \
	\cf3 var\cf2  sig, trg, frq;\
	trg = \cf3 InTrig\cf2 .kr(in,5);\
	frq = \cf3 ArrayControl\cf2 .kr(\cf4 \\frq\cf2 ,5,\{\cf3 |i|\cf2  i+1*100\});\
	sig = \cf3 Mix\cf2 (\cf3 LPF\cf2 .ar(\cf3 Pluck\cf2 .ar(\cf3 Logistic\cf2 .ar(4.0, 1200.0), trg, 1/frq, 1/frq, dec,0.5,trg), frq));\
	\cf3 Out\cf2 .ar(0, sig.dup * amp)\
\}).add\
\
\cf3 SynthDef\cf2 (\cf4 \\sinp\cf2 , \{\cf3 |in, amp, dur|\cf2 \
	\cf3 var\cf2  sig, trg, frq;\
	trg = \cf3 InTrig\cf2 .kr(in,5);\
	frq = \cf3 ArrayControl\cf2 .kr(\cf4 \\frq\cf2 ,5,\{\cf3 |i|\cf2  i+1*100\});\
	sig = \cf3 Mix\cf2 (\cf3 Pluck\cf2 .ar(\cf3 SinOsc\cf2 .ar(frq,0,\cf3 Dust\cf2 .ar(frq*10,0.5,1.0)),trg,1/frq,1/frq,dur) * \cf3 AmpComp\cf2 .kr(frq)\
		* \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 .perc,trg@0,levelScale:trg,timeScale:dur));\
	sig = sig + \cf3 Reverb\cf2 .ar(sig * 0.01, 4) + \cf3 CombN\cf2 .ar(sig*0.2,0.5,0.5,4);\
	\cf3 Out\cf2 .ar(0, sig.dup * amp)\
\}).add\
\
b = \cf3 Bus\cf2 .control(s, 5)\
\
~fund =  1.1574e-05 * (2**21);\
\
~min3scale = \cf3 Array\cf2 .geom(32, ~fund * 2, 19/16);\
\
~min2scale = \cf3 Array\cf2 .geom(64, ~fund, 17/16);\
\
~min2scale[63]\
\
~min3scale = ~min3scale.stutter(2) * ([1,36/35].lace(32))\
\
~min3scale[\cf3 Array\cf2 .rand(5,0,31).sort]\
\
(\
\cf3 Routine\cf2 (\{\
	\cf3 var\cf2  intervals;\
	intervals = \cf3 Array\cf2 .geom(4, 0.666, 0.5);\
\cf5 //	x = Synth(\\pluck, [\\in, b, \\dec, 3, \\amp, 0.1]);\cf2 \
	x = \cf3 Synth\cf2 (\cf4 \\sinp\cf2 , [\cf4 \\in\cf2 , b, \cf4 \\amp\cf2 , 0.1, \cf4 \\dur\cf2 , 0.01]);\
	64.do(\{\
		\cf3 var\cf2  times;\
		times = \cf3 Array\cf2 .rand(rrand(2, 6), 0.0, 1.0).normalizeSum.round(0.125);\
		times.do(\{\cf3 |time|\cf2 \
			x.setn(\cf4 \\frq\cf2 ,~min3scale[\cf3 Array\cf2 .rand(5,0,~min3scale.lastIndex).sort]);\
			x.set(\cf4 \\dur\cf2 ,rrand(0.01, 0.1));\
			b.set(*\cf3 Array\cf2 .rand(5,0.5,0.9).sort);\
	\cf5 //		b.set(*1!5);\cf2 \
			time.wait;\
		\})\
	\});\
	4.wait;\
	x.free;\
	\cf6 "finished"\cf2 .postln;\
\}).play\
\
)\
\
\
\
x.set(\cf4 \\dec\cf2 , 5.0)\
x.free\
\
~fund = 1.1574e-05 * (2**21);\
\
~min3scale = \cf3 Array\cf2 .geom(32, ~fund, 19/16);\
\
\cf3 SynthDef\cf2 (\cf4 \\intrg\cf2 , \{\cf3 |in|\cf2 \
	\cf3 var\cf2  trg;\
	trg = \cf3 InTrig\cf2 .kr(in, 2);\
	\cf3 SendReply\cf2 .kr(trg, \cf4 '/trg'\cf2 , trg, [10, 11] );\
\}).add;\
\
z.free\
b = \cf3 Bus\cf2 .control(s);\
r = \cf3 OSCresponderNode\cf2 (s.addr, \cf4 '/trg'\cf2 , \{\cf3 |ti, re, ms|\cf2  ms.postln \}).add\
z = \cf3 Synth\cf2 (\cf4 \\intrg\cf2 , [\cf4 \\in\cf2 , b])\
\
b.set(0.55, 0.33)\
\
10.do(\{\cf3 |i|\cf2 \
	\cf3 var\cf2  times = (\cf3 Array\cf2 .rand(rrand(2, 6), 0.0, 1.0).normalizeSum * 2).round(0.125);\
	\
\})}