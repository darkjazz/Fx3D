{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset238 Inconsolata;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red0\green0\blue0;\red0\green0\blue191;
\red96\green96\blue96;\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 //alo allik. f(x).\cf3 \
(\
~loadAts = \cf4 false\cf3 ;\
~localDecoder = \cf4 true\cf3 ;\
~stereoOutput = \cf4 true\cf3 ;\
\cf5 "/Users/alo/Development/Fx3D/Audio/zones/initiate_zones.rtf"\cf3 .load;\
)\
\
(\
~defs = [	\
	\cf4 SynthDef\cf3 (\cf6 \\kck\cf3 , \{\cf4 |ou, ef, fr, at, dr, cr, az, ea, on = 1, am|\cf3 \
		\cf4 var\cf3  sig, env, bfr;\
		env = \cf4 Env\cf3 .perc(at, 1.0 - at, 1, cr);\
		sig = \cf4 BLowPass\cf3 .ar(\
			\cf4 Mix\cf3 (\
				\cf4 SinOsc\cf3 .ar(\
					\cf4 Array\cf3 .series(5, fr, 10) * \cf4 LFNoise0\cf3 .ar(1000.0).range(35/36, 36/35), \
					0.5pi \
				)\
			),\
			300.0,\
			1.0\
		) * \cf4 EnvGen\cf3 .kr(env, timeScale: dr, levelScale: am, doneAction: 2) * on;\
		\cf4 Out\cf3 .ar(ef, sig * ea);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr)\
	\}),\
	\
	\
	\cf4 SynthDef\cf3 (\cf6 \\snr\cf3 , \{\cf4 |ou, fr, at, dr, cr, az, am|\cf3 \
		\cf4 var\cf3  sig, env, bfr;\
		env = \cf4 Env\cf3 .perc(at, 1.0 - at, 1, cr);\
		sig = \cf4 Dust2\cf3 .ar(fr) + \cf4 BPF\cf3 .ar(\cf4 WhiteNoise\cf3 .ar, \cf4 Line\cf3 .kr(fr*1.5, fr*0.667, dr), 0.5) \
			* \cf4 EnvGen\cf3 .kr(env, timeScale: dr, doneAction: 2);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr * am)\
	\}),\
		\
	\cf4 SynthDef\cf3 (\cf6 \\hh\cf3 , \{\cf4 |ou, dr, fr, az, am|\cf3 \
		\cf4 var\cf3  sig, env, bfr;\
		env = \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(0.05, 0.95, 1, -16), timeScale: dr, doneAction: 2);\
		sig = \cf4 RHPF\cf3 .ar(\cf4 PinkNoise\cf3 .ar, fr, 0.3) * env;\
		bfr = \cf4 BFEncode1\cf3 .ar(sig, az, 0, 0.5);	\
		\cf4 Out\cf3 .ar(ou, bfr * am);\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\bss\cf3 , \{\cf4 |ou, fr, dr, az, am|\cf3 \
		\cf4 var\cf3  env, sig, bfr;\
		env = \cf4 Env\cf3 ([0.001, 1.0, 1.0, 0.001], [0.01, 0.8, 0.19], \cf6 \\sine\cf3 );\
		sig = \cf4 SinOsc\cf3 .ar(fr * \cf4 LFNoise2\cf3 .ar(\cf4 SinOsc\cf3 .ar(1, 0, 500, 10000)).range(15/16, 16/15), \
			\cf4 SinOsc\cf3 .kr(2.25, 0, pi, pi), 10).distort\
			* \cf4 EnvGen\cf3 .kr(env, timeScale: dr, doneAction: 2);\
		sig = \cf4 Reverb\cf3 .ar(sig * 0.1, 3) + sig;\
		sig = \cf4 Compander\cf3 .ar(sig, sig, 0.2, 1.0, 0.01);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr * am)\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\clck\cf3 , \{\cf4 |ou, ef, am, az, dr, bt, ea|\cf3 \
		\cf4 var\cf3  sig, bfr;\
		sig = \cf4 BPF\cf3 .ar(\
			\cf4 VarSaw\cf3 .ar(15000, 0.0, 0.1, \cf4 Decay\cf3 .ar(\cf4 Impulse\cf3 .ar(bt), 0.001)),\
			15000,\
			0.9,\
			25 * \cf4 LFNoise1\cf3 .ar(8).range(0, 1)\
		).fold(-1, 1);\
		sig = sig * \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 ([0, 1, 1, 0], [0, 1, 0]), timeScale: dr, doneAction: 2);\
		\cf4 Out\cf3 .ar(ef, sig * ea);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig, az, 0, 0.5);		\
		\cf4 Out\cf3 .ar(ou, bfr * am)\
	\}),\
			\
	\cf4 SynthDef\cf3 (\cf6 \\nzsnr\cf3 , \{\cf4 |ou, am, az, fr, dr|\cf3 \
		\cf4 var\cf3  sig, env, bfr;\
		env = \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(0.05, 0.95, 1, -16), timeScale: dr, doneAction: 2);\
		sig = \cf4 Dust\cf3 .ar(fr) * \cf4 SinOsc\cf3 .ar(fr) * env;\
		bfr = \cf4 BFEncode1\cf3 .ar(sig, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr * am);\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\pnk\cf3 , \{\cf4 |ou, az, dr, am|\cf3 \
		\cf4 var\cf3  sig, env, bfr;\
		env = \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(0.05, 0.95, 1, -16), timeScale: dr, doneAction: 2);\
		sig = \cf4 PinkNoise\cf3 .ar * env;\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr.clip(-1, 1))\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\fmsnth\cf3 , \{\cf4 |ou, ef, dr, gd, cf, mf, in, az, on, am|\cf3 \
		\
		\cf4 var\cf3  sig, env, bfr, trg, dev, amps, n = 7;\
		trg = \cf4 Impulse\cf3 .kr(gd.reciprocal);\
		env = \cf4 Env\cf3 ([0.001, 1.0, 1.0, 0.001], [0.1, 0.5, 0.4], [0, 0, 3]);\
		dev = \cf4 Array\cf3 .rand(n, 0.5, 2.0).round(1 - (2**(1/24)));\
		amps = \cf4 Array\cf3 .geom(n, 1.0, 13 / 21);\
		sig = \cf4 Mix\cf3 .fill(n, \{\cf4 |i|\cf3 \
			\cf4 var\cf3  frq = cf * dev[i];\
			\cf4 DelayC\cf3 .ar(\cf4 FMGrain\cf3 .ar(trg, gd, frq, frq * mf, in, amps[i]), 0.1, \cf4 Rand\cf3 (0, 0.1))\
		\}) * \cf4 EnvGen\cf3 .kr(env, timeScale: dr, doneAction: 2);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr.clip(-1, 1))	\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\hgls\cf3 , \{\cf4 |ou, dr, fr, wd, ws, wr, gr, az, on, am|\cf3 \
		\
		\cf4 var\cf3  sig, env, bfr;\
		env = \cf4 Env\cf3 ([0.001, 1.0, 1.0, 0.001], [0.2, 0.5, 0.3], \cf6 \\sine\cf3 );\
		sig = \cf4 VarSaw\cf3 .ar(\cf4 XLine\cf3 .kr(fr, fr * 0.5, dr), 0, wd);\
		sig = \cf4 GrainIn\cf3 .ar(1, \cf4 Impulse\cf3 .kr(gr * \cf4 TRand\cf3 .kr(1-wr, 1+wr, \cf4 Impulse\cf3 .kr(gr))), ws, sig) * \
			\cf4 EnvGen\cf3 .kr(env, timeScale: dr, doneAction: 2);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr)\
		\
	\}),\
\
	\cf4 SynthDef\cf3 (\cf6 \\dbkck\cf3 , \{\cf4 |ou, ef, dr, gd, az, ea, on, am|\cf3 \
		\cf4 var\cf3  sig, env, bfr, fr;\
		fr = \cf4 Array\cf3 .geom(24, 14.midicps, 2**(1/24)) * (1..4).stutter(6).reverse;\
		env = \cf4 Env\cf3 ([0.001, 8.0, 1.0, 0.001], [0.01, 0.1, 0.89], [0, 0, -16]);\
		sig = \cf4 Mix\cf3 (\cf4 SinGrain\cf3 .ar(\cf4 Impulse\cf3 .kr(gd.reciprocal * 4), gd, fr, 0.4)); \
		sig = sig * \cf4 EnvGen\cf3 .kr(env, timeScale: dr, doneAction: 2);\
		sig = sig.clip(-0.9, 0.9);\
		\cf4 Out\cf3 .ar(ef, sig * ea);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr)\
	\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\dbclp\cf3 , \{\cf4 |ou, ef, at, cr, dr, co, ds, az, ea, on, am|\cf3 \
		\cf4 var\cf3  sig, env, bfr;\
		env = \cf4 Env\cf3 .perc(at, 1 - at, 1, cr);\
		sig = \cf4 Crackle\cf3 .ar(co, ds).clip(-0.9, 0.9) * \
			\cf4 EnvGen\cf3 .kr(env, timeScale: dr, doneAction: 2);\
		\cf4 Out\cf3 .ar(ef, sig * ea);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr)\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\gndy\cf3 , \{\cf4 |ou, at, cr, dr, sf, ef, az, am|\cf3 \
		\cf4 var\cf3  sig, bfr;\
		sig = \cf4 Gendy3\cf3 .ar(freq: \cf4 XLine\cf3 .kr(sf, ef, dr)) * \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(at, 1 - at, 1, cr), timeScale: dr, doneAction: 2);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr)\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\bpst\cf3 , \{\cf4 |ou, at, cr, dr, fr, az, am|\cf3 \
		\cf4 var\cf3  sig, bfr;\
		sig = \cf4 KmeansToBPSet1\cf3 .ar(freq: fr) * \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(at, 1 - at, 1, cr), timeScale: dr, doneAction: 2);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr)\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\lrnz\cf3 , \{\cf4 |ou, nf, xf, at, cr, dr, az, am|\cf3 \
		\cf4 var\cf3  sig, bfr;\
		sig = \cf4 Lorenz2DC\cf3 .ar(nf, xf).clip(-1, 1) * \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(at, 1 - at, 1, cr), timeScale: dr, doneAction: 2);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr)\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\stnd\cf3 , \{\cf4 |ou, nf, xf, pr, at, cr, dr, az, am|\cf3 \
		\cf4 var\cf3  sig, bfr;\
		sig = \cf4 Standard2DL\cf3 .ar(nf, xf, pr) * \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(at, 1 - at, 1, cr), timeScale: dr, doneAction: 2);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr.clip(-1, 1))\
	\}),\
	\
	\cf4 SynthDef\cf3 (\cf6 \\latoo\cf3 , \{\cf4 |ou, nf, xf, at, cr, dr, az, am|\cf3 \
		\cf4 var\cf3  sig, bfr;\
		sig = \cf4 Latoocarfian2DN\cf3 .ar(nf, xf) * \cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(at, 1 - at, 1, cr), timeScale: dr, doneAction: 2);\
		bfr = \cf4 BFEncode1\cf3 .ar(sig * am, az, 0, 0.5);\
		\cf4 Out\cf3 .ar(ou, bfr)\
	\})\
	\
];\
\
\cf4 SynthDef\cf3 (\cf6 \\kckrv\cf3 , \{\cf4 |ou, in, rt, am|\cf3 \
	\cf4 var\cf3  inp, sig, bfr;\
	inp = \cf4 In\cf3 .ar(in);\
	sig = \cf4 GVerb\cf3 .ar(inp, 20, rt, 0.1, 0.1, 1);\
	bfr = \cf4 A2B\cf3 .ar(sig[0], sig[1], \cf4 DelayN\cf3 .ar(sig[0], 0.01, 0.01), \cf4 DelayN\cf3 .ar(sig[1], 0.02, 0.02));\
	\cf4 Out\cf3 .ar(ou, bfr * am)\
\}).add;\
\
\pard\pardeftab720\ql\qnatural
\cf4 SynthDef\cf3 (\cf6 \\rwarpfldatk\cf3 , \{\cf4 |out, efx, gate, aamp, eamp, maxdel, dur, buf, str, end, wrp, frq, wsz, \
		dns, rnd, xang, yang, zang, doneAction = 2|\cf3 \
	\cf4 var\cf3  ptr, sig, bf, delays, shifts, wins, amps, a, b, c, d, w, x, y, z;\
	delays = \cf4 ArrayControl\cf3 .kr(\cf6 \\delays\cf3 , 4, 0);\
	shifts = \cf4 ArrayControl\cf3 .kr(\cf6 \\shifts\cf3 , 4, 1);\
	wins = \cf4 ArrayControl\cf3 .kr(\cf6 \\wins\cf3 , 4, 0.1);\
	amps = \cf4 ArrayControl\cf3 .kr(\cf6 \\amps\cf3 , 4, 1);\
	ptr = \cf4 LFSaw\cf3 .kr(wrp).range(str, end);\
	sig = \cf4 LeakDC\cf3 .ar(\cf4 Warp1\cf3 .ar(1, buf, ptr, frq, wsz, -1, dns, rnd)) * \
		\cf4 EnvGen\cf3 .kr(\cf4 EnvControl\cf3 .kr, gate, timeScale: dur, doneAction: doneAction);\
	sig = \cf4 LeakDC\cf3 .ar(sig ** 0.5 ** 1.5) * \cf4 LFPulse\cf3 .kr(12).range(0, 1);\
	\cf4 Out\cf3 .ar(efx, sig * eamp);\
	#a, b, c, d = \cf4 Array\cf3 .fill(4, \{\cf4 |i|\cf3   \
		\cf4 DelayC\cf3 .ar(\cf4 PitchShift\cf3 .ar(sig, wins@i, shifts@i), maxdel, delays@i, amps@i);\
	\});\
	#w, x, y, z = \cf4 A2B\cf3 .ar(a, b, c, d) * aamp;\
	\cf4 Out\cf3 .ar(out, \cf4 AtkRotateXYZ\cf3 .ar(w, x, y, z, xang, yang, zang))\
\}).add;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf4 SynthDef\cf3 (\cf6 \\bell\cf3 , \{\cf4 |ou, am, fr, dr, ph, pn, rt, ra, at, re, cu, du|\cf3 \
	\cf4 var\cf3  sig,frqs;\
	frqs = \cf4 Array\cf3 .geom(5,1,4**(1/5));\
	sig = \cf4 SinOsc\cf3 .ar(fr,ph,am)*\cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(at,re,curve:cu),timeScale:dr);\
	sig = sig + \cf4 Klank\cf3 .ar(`[fr*frqs,frqs.reciprocal,dr*frqs.reciprocal],\cf4 Reverb\cf3 .ar(sig*ra,rt));\
	\cf4 Line\cf3 .kr(dur: du, doneAction: 2);\
	\cf4 Out\cf3 .ar(ou,\cf4 BFEncode1\cf3 .ar(sig,pn));\
\}).add;\
\
\cf4 SynthDef\cf3 (\cf6 \\beat\cf3 , \{\cf4 |ou, am, cf, mf, pf, dr, fi, ip, pn, rt, ra, at, re, cu, du|\cf3 \
	\cf4 var\cf3  sig, car;\
	car = \cf4 SinOsc\cf3 .ar(mf,\cf4 SinOsc\cf3 .ar(pf,0,ip),fi);\
	sig = \cf4 SinOsc\cf3 .ar(cf+car)*\cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(at,re,curve:cu),timeScale:dr);\
	sig = sig + \cf4 Reverb\cf3 .ar(sig*ra,rt);\
	\cf4 Line\cf3 .kr(dur: du, doneAction: 2);\
	\cf4 Out\cf3 .ar(ou,\cf4 BFEncode1\cf3 .ar(sig,pn))\
\}).add;\
\
\cf4 SynthDef\cf3 (\cf6 \\bass\cf3 , \{\cf4 |ou, fr, nf, am, nm, wd, dr, pn, rt, ra, at, re, cu, du|\cf3 \
	\cf4 var\cf3  sig, frqs;\
	frqs = \cf4 Array\cf3 .geom(5,1,19/16);\
	sig = \cf4 VarSaw\cf3 .ar(fr+\cf4 LFNoise0\cf3 .ar(nf,nm),0,wd)*\cf4 EnvGen\cf3 .kr(\cf4 Env\cf3 .perc(at,re,curve:cu),timeScale:dr);\
	sig = sig+\cf4 Klank\cf3 .ar(`[fr*frqs,frqs.reciprocal,dr*frqs.reciprocal],sig*ra);\
	\cf4 Line\cf3 .kr(dur: du, doneAction: 2);\
	\cf4 Out\cf3 .ar(ou,\cf4 BFEncode1\cf3 .ar(sig,pn))\
\}).add;\
\
~defs.do(\cf4 _\cf3 .add);\
\
)\
\
~loops.do(\cf4 _\cf3 .postln)\
\
(\
		\
\cf2 //	~loopind = [201, 174, 182, 189, 225, 230, 232, 237];\cf3 \
\
\cf2 // 	~loopind = [85, 87, 98, 101, 103, 113, 115, 120];\cf3 \
	\
\cf2 //	~loopind = [225, 230, 232, 237] ++ (0..3)\cf3 \
\
	~scale = \cf4 Array\cf3 .geom(40, 1.1574e-05 * (2**21), 2**(1/5)).clump(5);\
\
	~loopind = (64..79);\
	\
\cf2 //	~loopind = (33..40)\cf3 \
		\
\cf2 //	~indices = (0..63).clump(2).clump(2).flop.flatten(2).clump(4).perfectShuffle\cf3 \
\cf2 //			.clump(4).flop.flatten(2).clump(8).sort(\{|a, b| a[0] < b[0] \});\cf3 \
\
	~indices = ((0,2..15) ++ (1,3..15) ++ (16,20..47) ++ (17,21..47) \
			++ (18,22..47) ++ (19,23..47) ++ (48,50..63) ++ (49,51..63)).clump(4);\
	\
	~trigmap = [\
		(\cf6 \\on\cf3 : 0.3, \cf6 \\off\cf3 : 0.1, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.2, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.5, \cf6 \\off\cf3 : 0.3, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.0, \cf6 \\off\cf3 : 1.0, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.8, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.7, \cf6 \\off\cf3 : 0.5, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		\
		(\cf6 \\on\cf3 : 0.0, \cf6 \\off\cf3 : 0.1, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.1, \cf6 \\off\cf3 : 0.2, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.2, \cf6 \\off\cf3 : 0.3, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.3, \cf6 \\off\cf3 : 0.5, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.5, \cf6 \\off\cf3 : 0.7, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.7, \cf6 \\off\cf3 : 0.8, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.8, \cf6 \\off\cf3 : 0.9, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
		(\cf6 \\on\cf3 : 0.9, \cf6 \\off\cf3 : 1.0, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  )\
	];	\
		\
	~synths = \cf4 Array\cf3 .newClear(16);\
		\
	~z3map = (\
		\cf6 \\aamp\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (0.5, 0.1)),\
		\cf6 \\eamp\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (0.05, 0.2)),\
		\cf6 \\str\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (0, 0.5)),\
		\cf6 \\end\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (0.5, 1.0)),\
		\cf6 \\wrp\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (0.125/4 , 1/4, step: 2**(1/5) )),\
		\cf6 \\frq\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (0.125, 1.0, step: 0.125 )),\
		\cf6 \\wsz\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (1/64, 1/4, step: 1/64 )),\
		\cf6 \\dns\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (2, 16)),\
		\cf6 \\rnd\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (0.1, 0.2)),\
		\cf6 \\xang\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (pi, -pi, step: 2**(1/5) )),\
		\cf6 \\yang\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (pi, -pi, step: 2**(1/5) )),\
		\cf6 \\zang\cf3 : \cf4 LinearWarp\cf3 (\cf4 ControlSpec\cf3 (pi, -pi, step: 2**(1/5) ))\
	);\
		\
	~z3pmaps = (\
		kck: (\
			fr: \cf4 ControlSpec\cf3 (20.0, 40.0, step: 2**(1/24)),\
			at: \cf4 ControlSpec\cf3 (0.01, 0.1),\
			dr: \cf4 ControlSpec\cf3 (0.01, 0.2),\
			cr: \cf4 ControlSpec\cf3 (0, -8),\
			ea: \cf4 ControlSpec\cf3 (0.01, 0.05),\
			am: \cf4 ControlSpec\cf3 (0.7, 2)\
		),\
		\
		snr: (\
			fr: \cf4 ControlSpec\cf3 (40.0, 70.0, step: 2**(1/24)),\
			at: \cf4 ControlSpec\cf3 (0.008, 0.1),\
			dr: \cf4 ControlSpec\cf3 (0.01, 0.1),\
			cr: \cf4 ControlSpec\cf3 (-2, -10),\
			am: \cf4 ControlSpec\cf3 (10, 20, step: 1)\
		),\
		\
		hh: (\
			dr: \cf4 ControlSpec\cf3 (0.01, 0.06),\
			fr: \cf4 ControlSpec\cf3 (2000, 4000, step: 2**(1/24)),\
			am: \cf4 ControlSpec\cf3 (20, 30)\
		),\
		\
		bss: (\
			fr: \cf4 ControlSpec\cf3 (30, 60, step: 2**(1/24)),\
			dr: \cf4 ControlSpec\cf3 (0.02, 0.1),\
			am: \cf4 ControlSpec\cf3 (3.0, 5.0)\
		),\
		\
		clck: (\
			am: \cf4 ControlSpec\cf3 (6.0, 10.0, step: 1),\
			dr: \cf4 ControlSpec\cf3 (1.0, 4.0, step: 1),\
			bt: \cf4 ControlSpec\cf3 (1, 1),\
			ea: \cf4 ControlSpec\cf3 (0.05, 0.2)\
		),\
		\
		nzsnr: (\
			am: \cf4 ControlSpec\cf3 (3, 6),\
			fr: \cf4 ControlSpec\cf3 (500, 1000, step: 2**(1/24)),\
			dr: \cf4 ControlSpec\cf3 (0.05, 0.3)\
		),\
		\
		pnk: (\
			dr: \cf4 ControlSpec\cf3 (0.03, 0.1),\
			am: \cf4 ControlSpec\cf3 (3.0, 6.0)\
		),\
		\
		fmsnth: (\
			dr: \cf4 ControlSpec\cf3 (0.02, 0.2),\
			gd: \cf4 ControlSpec\cf3 (0.005, 0.05),\
			cf: \cf4 ControlSpec\cf3 (300, 600, step: 2**(1/24)),\
			mf: \cf4 ControlSpec\cf3 (0.25, 2.0, step: 0.25),\
			in: \cf4 ControlSpec\cf3 (6, 24, step: 2),\
			am: \cf4 ControlSpec\cf3 (1.0, 3.0)\
		),\
		\
		hgls: (\
			dr: \cf4 ControlSpec\cf3 (0.05, 0.3),\
			fr: \cf4 ControlSpec\cf3 (5000, 10000, step: 2**(1/5)), \
			wd: \cf4 ControlSpec\cf3 (0.2, 0.5), \
			ws: \cf4 ControlSpec\cf3 (0.01, 0.05), \
			wr: \cf4 ControlSpec\cf3 (0.01, 0.05), \
			gr: \cf4 ControlSpec\cf3 (8, 12), \
			am: \cf4 ControlSpec\cf3 (0.1, 0.4)\
		),\
		\
		dbkck: (\
			dr: \cf4 ControlSpec\cf3 (0.05, 0.3),\
			ea: \cf4 ControlSpec\cf3 (0.01, 0.05),\
			gd: \cf4 ControlSpec\cf3 (0.01, 0.06),\
			am: \cf4 ControlSpec\cf3 (0.7, 1.3)\
		),\
		\
		dbclp: (\
			at: \cf4 ControlSpec\cf3 (0.01, 0.1),\
			cr: \cf4 ControlSpec\cf3 (-2, -6),\
			dr: \cf4 ControlSpec\cf3 (0.04, 0.4),\
			co: \cf4 ControlSpec\cf3 (1.9, 1.99),\
			ds: \cf4 ControlSpec\cf3 (25, 50),\
			ea: \cf4 ControlSpec\cf3 (0, 0.01),\
			am: \cf4 ControlSpec\cf3 (0.75, 1.5)\
		),\
		\
		gndy: (\
			at: \cf4 ControlSpec\cf3 (0.01, 0.2),\
			cr: \cf4 ControlSpec\cf3 (-6, 6),\
			dr: \cf4 ControlSpec\cf3 (0.2, 0.05),\
			sf: \cf4 ControlSpec\cf3 (200, 300, step: 2**(1/12)),\
			ef: \cf4 ControlSpec\cf3 (400, 800, step: 2**(1/24)),\
			am: \cf4 ControlSpec\cf3 (1.0, 2.0)\
		),\
		\
		bpst: (\
			at: \cf4 ControlSpec\cf3 (0.1, 0.01),\
			cr: \cf4 ControlSpec\cf3 (-4, 4),\
			dr: \cf4 ControlSpec\cf3 (0.05, 0.2),\
			fr: \cf4 ControlSpec\cf3 (10000, 20000, step: 2**(1/24)),\
			am: \cf4 ControlSpec\cf3 (1.0, 2.0)\
		),\
		\
		lrnz: (\
			nf: \cf4 ControlSpec\cf3 (200, 400),\
			xf: \cf4 ControlSpec\cf3 (400, 1600),\
			at: \cf4 ControlSpec\cf3 (0.01, 0.2),\
			cr: \cf4 ControlSpec\cf3 (-2, -8),\
			am: \cf4 ControlSpec\cf3 (3, 8),\
			dr: \cf4 ControlSpec\cf3 (0.05, 0.2)			\
		),\
		\
		stnd: (\
			nf: \cf4 ControlSpec\cf3 (200, 2000),\
			xf: \cf4 ControlSpec\cf3 (800, 8000),\
			pr: \cf4 ControlSpec\cf3 (0.2, 2.0),\
			at: \cf4 ControlSpec\cf3 (0.01, 0.2),\
			cr: \cf4 ControlSpec\cf3 (-6, 2),\
			am: \cf4 ControlSpec\cf3 (2.0, 0.5),\
			dr: \cf4 ControlSpec\cf3 (0.05, 0.2)			\
		),\
		\
		latoo: (\
			nf: \cf4 ControlSpec\cf3 (200, 300, step: 25),\
			xf: \cf4 ControlSpec\cf3 (800, 1600, step: 100),\
			at: \cf4 ControlSpec\cf3 (0.1, 0.01),\
			cr: \cf4 ControlSpec\cf3 (-2, -8),\
			am: \cf4 ControlSpec\cf3 (5.0, 10.0),\
			dr: \cf4 ControlSpec\cf3 (0.05, 0.2)			\
		)\
		\
	);\
	\
	~vimap = (\
		transz: \cf4 ControlSpec\cf3 (-24, -42, step: 2),\
		angle: \cf4 ControlSpec\cf3 (-0.3, 0.3, step: 0.1),\
		rotX: \cf4 ControlSpec\cf3 (0.0, 1.0, step: 0.1),\
		rotY: \cf4 ControlSpec\cf3 (0.0, 1.0, step: 0.1),\
		rotZ: \cf4 ControlSpec\cf3 (0.0, 1.0, step: 0.1)\
	);\
	\
	~viseq = \cf4 Pseq\cf3 (~vimap.keys(\cf4 Array\cf3 ), \cf4 inf\cf3 ).asStream;\
		\
	~addSynth = \{\cf4 |index, values|\cf3 \
		\cf4 var\cf3  vikey;\
		\cf4 var\cf3  states = \cf4 Pseq\cf3 (values.states[~indices[index]], \cf4 inf\cf3 ).asStream;\
		\
		if (~beatsActive)\
		\{\
			\cf4 Synth\cf3 .head(~agrp, ~defs[index].name, \
				~z3pmaps[~defs[index].name.asSymbol].collect(\{\cf4 |spec|\cf3  spec.map(states.next) \}).asKeyValuePairs\
				++ [\cf6 \\az\cf3 , [-pi, pi].asSpec.map(states.next), \cf6 \\ou\cf3 , ~abus, \cf6 \\ef\cf3 , ~rvb ]);\
		\};\
		\
		if (index == 0)\
		\{\
			vikey = ~viseq.next;\
			~fx.visualdict.globals[vikey] = ~vimap[vikey].map(values.stddev);\
			~fx.sendCurrentSettings;\
		\};\
		\
		states = \cf4 Pseq\cf3 (values.states[~indices[index]], \cf4 inf\cf3 ).asStream;\
		\
		if (~synthsActive)\
		\{\
					\
			~synths[index] = \cf4 Synth\cf3 .head(~agrp, \cf6 \\rwarpfldatk\cf3 , \
				[\cf6 \\out\cf3 , ~abus, \cf6 \\efx\cf3 , ~rbus, \cf6 \\gate\cf3 , 1.0, \cf6 \\aamp\cf3 , 0.5, \
				\cf6 \\eamp\cf3 , 0.1, \cf6 \\maxdel\cf3 , 0.1, \cf6 \\dur\cf3 , 1, \cf6 \\buf\cf3 , ~loopind[index],\
				] ++ ~z3map.collect(\{\cf4 |spec|\cf3  spec.map(states.next) \}).asKeyValuePairs )\
					.setn(\cf6 \\env\cf3 , \cf4 Env\cf3 ([1, 1, 0], [0.8, 0.2], \cf6 \\lin\cf3 , 2, 1).asArray)\
					.setn(\cf6 \\delays\cf3 , \cf4 Array\cf3 .geom(4, [0.005, 0.01].asSpec.map(states.next), 1.618 ))\
					.setn(\cf6 \\shifts\cf3 , [1, 0.5, 0.25, 1])\
					.setn(\cf6 \\wins\cf3 , \cf4 Array\cf3 .geom(4, [0.01, 0.05].asSpec.map(states.next), 1.618 ))\
					.setn(\cf6 \\amps\cf3 , \cf4 Array\cf3 .geom(4, 1.0, 8/13));\
		\}\
\
	\};\
\
	~removeSynth = \{\cf4 |index|\cf3 \
		~synths[index].set(\cf6 \\gate\cf3 , -1.0);\
		~synths[index] = \cf4 nil\cf3 ;	\
	\};\
\
	~mapParams = \{\cf4 |values|\cf3 \
					\
		~indices.do(\{ \cf4 |index, i|\cf3 \
			\cf4 var\cf3  map, states, params = values.states[index];\
			map = ~trigmap[i];\
			\
			if (~synths[i].notNil)\
			\{\
				states = \cf4 Pseq\cf3 (values.states[~indices[i]], \cf4 inf\cf3 ).asStream;\
				~synths[i].set(~z3map.collect(\{\cf4 |spec|\cf3  spec.map(states.next) \}).asKeyValuePairs)\
			\};\
			\
			if (map.on > map.off) \{\
				if ((map.active.not).and(params[0] > map.off).and(params[0] < map.on))\
				\{\
					~addSynth.value(i, values);\
					map.active = \cf4 true\cf3 ;\
				\};\
				if ((map.active).and((params[0] < map.off).or(params[0] > map.on) ))\
				\{\
					~removeSynth.value(i);\
					map.active = \cf4 false\cf3 ;\
				\}\
			\}\
			\{\
				if ((map.active.not).and(params[0] < map.off).and(params[0] > map.on))\
				\{\
					~addSynth.value(i, values);\
					map.active = \cf4 true\cf3 ;\
				\};\
				if ((map.active).and((params[0] > map.off).or(params[0] < map.on) ))\
				\{\
					~removeSynth.value(i);\
					map.active = \cf4 false\cf3 ;\
				\}\
			\
			\};\
\
			\
		\})\
			\
	\};\
\
	\
)\
\
(\
	~recordActive = \cf4 true\cf3 ;\
	~recordPath = \cf5 "/Users/alo/sounds/fx/zone_3_"\cf3  ++ \cf4 Date\cf3 .getDate.stamp ++ \cf5 ".aif"\cf3 ;\
\
	~rout = \cf4 Routine\cf3 (\{\
		\
		3.wait;\
		\
		~fx.startFx;\
		\
		7.wait;\
		\
		~fx.visualdict.globals[\cf6 \\alpha\cf3 ] = 1.0;\
		~fx.visualdict.globals[\cf6 \\clear\cf3 ] = 0.1;\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.96;\
		~fx.visualdict.globals[\cf6 \\transx\cf3 ] = 0.0;\
		~fx.visualdict.globals[\cf6 \\transy\cf3 ] = 0.0;\
		~fx.visualdict.globals[\cf6 \\transz\cf3 ] = -32.0;\
		~fx.visualdict.globals[\cf6 \\angle\cf3 ] = -0.2;\
		~fx.visualdict.globals[\cf6 \\rotX\cf3 ] = 0.0;\
		~fx.visualdict.globals[\cf6 \\rotY\cf3 ] = 0.0;\
		~fx.visualdict.globals[\cf6 \\rotZ\cf3 ] = 0.0;\
		~fx.visualdict.globals[\cf6 \\frame\cf3 ] = 4;\
		\
		~fx.sendCurrentSettings;\
		\
		if (~recordActive) \{ ~serv.prepareForRecord(~recordPath) \};\
		\
		5.wait;\
		\
		if (~recordActive) \{ ~serv.record \};\
		\
		~fx.addGlobalsResponder;\
		~fx.addStatesResponder;\
		~fx.addTriggerResponder;\
		\
		~fx.visualdict.globals[\cf6 \\clear\cf3 ] = 1.0;\
		~fx.sendCurrentSettings;\
	\
		0.1.wait;\
	\
		~fx.visualdict.globals[\cf6 \\clear\cf3 ] = 0.1;\
		~fx.sendCurrentSettings;\
		\
		~timer = \cf4 Date\cf3 .getDate.bootSeconds;\
		\
		~fx.sendPollIndices(~fx.getPollIndices(2));\
		\
		~rvb = \cf4 Bus\cf3 .audio(~serv);	\
\
		1.wait;		\
		\
		~synthsActive = \cf4 false\cf3 ;\
		~beatsActive = \cf4 true\cf3 ;\
		\
		~fx.sendReset(0, 0, 1, 4, 4, 7, 8, 8, 1, *~fx.weightPresets.equal.value);\
		\
		~kckrv = \cf4 Synth\cf3 .after(~agrp, \cf6 \\kckrv\cf3 , [\cf6 \\ou\cf3 , ~abus, \cf6 \\in\cf3 , ~rvb, \cf6 \\rt\cf3 , 1.5, \cf6 \\am\cf3 , 1.0]);\
\
		(1/12).wait;		\
		~fx.addStatesFunction(\cf6 \\zone3\cf3 , ~mapParams);\
		(1/12).wait;\
		~fx.activatePatch(\cf6 \\mesh\cf3 , 0);\
		(1/12).wait;\
		~fx.sendPatchCmd(\cf6 \\mesh\cf3 , \cf6 \\color\cf3 , 0, 2, 0);\
		(1/12).wait;\
		~fx.sendPatchCmd(\cf6 \\mesh\cf3 , \cf6 \\alphamap\cf3 , 0, 1, 0);\
		(1/12).wait;\
		~fx.sendPatchCmd(\cf6 \\mesh\cf3 , \cf6 \\alphahi\cf3 , 0, 1, 0);			(1/12).wait;	\
		~fx.visualdict.globals[\cf6 \\angle\cf3 ] = 0.25;\
		~fx.sendCurrentSettings;\
\
		6.wait;\
		\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 50;\
			start = 0.95; end = 0.8; add = 0.95;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.95;\
			~fx.sendCurrentSettings;\
		\}).play;\
\
		12.wait;\
\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 50;\
			start = 0.95; end = 0.8; add = 0.95;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.97;\
			~fx.sendCurrentSettings;\
		\}).play;\
\
		12.wait;\
		\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 50;\
			start = 0.95; end = 0.7; add = 0.95;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.95;\
			~fx.sendCurrentSettings;\
		\}).play;\
		\
		12.wait;\
						\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 50;\
			start = 0.95; end = 0.1; add = 0.95;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.98;\
			~fx.sendCurrentSettings;			\
		\}).play;\
		\
		12.wait;\
				\
		~trigmap = [\
			(\cf6 \\on\cf3 : 0.2, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.8, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.1, \cf6 \\off\cf3 : 0.9, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.9, \cf6 \\off\cf3 : 0.1, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.8, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.2, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
\
			(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.2, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.8, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.9, \cf6 \\off\cf3 : 0.1, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.1, \cf6 \\off\cf3 : 0.9, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.8, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.2, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  )\
		];	\
		\
		~fx.sendPatchCmd(\cf6 \\mesh\cf3 , \cf6 \\colormap\cf3 , 0, 1, 0);\
						\
		12.wait;		\
						\
		~fx.sendReset(0, 0, 1, 4, 4, 7, 8, 8, 1, *~fx.weightPresets.cross.value);\
				\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 100;\
			start = 0.3; end = 0.9; add = 0.3;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.07;\
			~fx.sendCurrentSettings;			\
		\}).play;		\
		\
		12.wait;\
		\
		~trigmap = [\
			(\cf6 \\on\cf3 : 0.3, \cf6 \\off\cf3 : 0.1, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.2, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.5, \cf6 \\off\cf3 : 0.3, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.9, \cf6 \\off\cf3 : 0.7, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.8, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.7, \cf6 \\off\cf3 : 0.5, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
\
			(\cf6 \\on\cf3 : 0.0, \cf6 \\off\cf3 : 0.1, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.1, \cf6 \\off\cf3 : 0.2, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.2, \cf6 \\off\cf3 : 0.3, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.3, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.5, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.5, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.7, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.7, \cf6 \\off\cf3 : 0.8, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  )\
		];	\
		\
		~fx.sendPatchCmd(\cf6 \\mesh\cf3 , \cf6 \\alphamap\cf3 , 1, 0, 0);\
\
		~fx.activatePatch(\cf6 \\wobble\cf3 , 0);\
		\
		~beatsActive = \cf4 false\cf3 ;\
		\
		4.wait;\
		\
		~fx.sendPatchCmd(\cf6 \\wobble\cf3 , \cf6 \\color\cf3 , 0, 2, 0);\
		\
		(1/12).wait;\
		\
		~synthsActive = \cf4 true\cf3 ;\
		~beatsActive = \cf4 true\cf3 ;\
\
		~fx.addGlobalsFunction(\cf6 \\zone3_gl\cf3 , \{\cf4 |values|\cf3 \
			~fx.sendPatchCmd(\cf6 \\wobble\cf3 , \cf6 \\alphahi\cf3 , 0, values.stddev, 0);\
		\});\
		\
		2.wait;\
		\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.95;\
		~fx.sendCurrentSettings;		\
		\
		6.wait;\
\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.7;\
		~fx.sendCurrentSettings;		\
		\
		2.wait;\
		\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.97;\
		~fx.sendCurrentSettings;				\
		\
		6.wait;\
		\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.4;\
		~fx.sendCurrentSettings;		\
		\
		2.wait;\
\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.97;\
		~fx.sendCurrentSettings;				\
		\
		4.wait;\
		\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.6;\
		~fx.sendCurrentSettings;		\
		\
		2.wait;\
				\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.97;\
		~fx.sendCurrentSettings;				\
		\
		4.wait;\
		\
		~beatsActive = \cf4 false\cf3 ;\
				\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 100;\
			start = 0.1; end = 0.5; add = 0.1;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			2.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.2;\
			~fx.sendCurrentSettings;\
		\}).play;		\
		\
		6.wait;\
		\
		~beatsActive = \cf4 true\cf3 ;\
		\
		24.wait;		\
						\
		~trigmap = [\
			(\cf6 \\on\cf3 : 0.1, \cf6 \\off\cf3 : 0.3, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.2, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.3, \cf6 \\off\cf3 : 0.5, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.9, \cf6 \\off\cf3 : 0.7, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.8, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.7, \cf6 \\off\cf3 : 0.5, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
\
			(\cf6 \\on\cf3 : 0.2, \cf6 \\off\cf3 : 0.0, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.3, \cf6 \\off\cf3 : 0.1, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.4, \cf6 \\off\cf3 : 0.2, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.5, \cf6 \\off\cf3 : 0.3, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.6, \cf6 \\off\cf3 : 0.4, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.7, \cf6 \\off\cf3 : 0.5, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.8, \cf6 \\off\cf3 : 0.6, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  ),\
			(\cf6 \\on\cf3 : 0.9, \cf6 \\off\cf3 : 0.7, \cf6 \\last\cf3 : 0, \cf6 \\active\cf3 : \cf4 false\cf3  )\
		];\
						\
		~fx.sendReset(0, 0, 1, 4, 4, 7, 8, 8, 1, *~fx.weightPresets.rand.value);\
						\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 50;\
			start = 0.2; end = 0.7; add = 0.2;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.1;\
			~fx.sendCurrentSettings;\
		\}).play;		\
		\
		12.wait;\
\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 50;\
			start = 0.2; end = 0.7; add = 0.2;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.1;\
			~fx.sendCurrentSettings;\
		\}).play;		\
		\
		12.wait;\
		\
		~beatsActive = \cf4 false\cf3 ;\
		\
		4.wait;\
		\
		~beatsActive = \cf4 true\cf3 ;\
		\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 100;\
			start = 0.2; end = 0.9; add = 0.2;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.1;\
			~fx.sendCurrentSettings;\
		\}).play;				\
		\
		24.wait;\
				\
		~fx.sendReset(0, 0, 1, 4, 4, 7, 8, 8, 1, *~fx.weightPresets.symmetry.value);\
		\
		~synthsActive = \cf4 false\cf3 ;\
		\
		\cf4 Routine\cf3 (\{\
			\cf4 var\cf3  add, start, end, dur = 50;\
			start = 0.1; end = 0.3; add = 0.1;\
			dur.do(\{\
				add = add + (end - start / dur);\
				~fx.visualdict.globals[\cf6 \\add\cf3 ] = add;\
				~fx.sendCurrentSettings;\
				0.06.wait;\
			\});\
			1.wait;\
			~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.1;\
			~fx.sendCurrentSettings;\
		\}).play;				\
				\
		24.wait;\
		\
		~synthsActive = \cf4 true\cf3 ;\
		\
		24.wait;\
		\
		~fx.sendReset(0, 0, 1, 4, 4, 7, 8, 8, 1, *~fx.weightPresets.rand.value);\
		\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.95;\
		~fx.sendCurrentSettings;		\
		\
		6.wait;\
\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.7;\
		~fx.sendCurrentSettings;		\
		\
		6.wait;\
		\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.97;\
		~fx.sendCurrentSettings;				\
		\
		6.wait;\
		\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.4;\
		~fx.sendCurrentSettings;		\
		\
		6.wait;\
\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.97;\
		~fx.sendCurrentSettings;				\
		\
		6.wait;\
		\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.6;\
		~fx.sendCurrentSettings;		\
		\
		6.wait;\
				\
		~fx.visualdict.globals[\cf6 \\add\cf3 ] = 0.97;\
		~fx.sendCurrentSettings;				\
		\
		6.wait;\
		\
		~beatsActive = \cf4 false\cf3 ;\
		\
		~kckrv.free;\
						\
		~fx.deactivatePatch(\cf6 \\mesh\cf3 , 0);\
		\
		12.wait;\
		\
		~fx.deactivatePatch(\cf6 \\wobble\cf3 , 0);\
										\
		~fx.removeAllStatesFunctions;\
		~fx.removeAllTriggerFunctions;\
		~fx.removeAllGlobalsFunctions;\
		\
		12.wait;\
		\
		\cf5 "MAIN FINISHED!"\cf3 .postln;\
		(\cf5 "time elapsed: "\cf3  ++ (\cf4 Date\cf3 .getDate.bootSeconds - ~timer).asString).postln;\
		\
		if (~recordActive) \{ ~serv.stopRecording \};\
				\
	\}).play\
	\
)\
\
\
\
~rsp.remove\
~rsp = \cf4 OSCresponderNode\cf3 (s.addr, \cf6 '/amp'\cf3 , \{\cf4 |ti, re, ms|\cf3 \
	ms.postln\
\}).add}