{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf540
{\fonttbl\f0\fnil\fcharset238 Inconsolata;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue191;\red96\green96\blue96;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs24 \cf2 (\
~loadAts = \cf3 false\cf2 ;\
~localDecoder = \cf3 true\cf2 ;\
~stereoOutput = \cf3 true\cf2 ;\
\cf4 "/Users/alo/Development/Fx3D/Audio/zones/initiate_zones.rtf"\cf2 .load;\
)\
\
(\
\
\cf3 SynthDef\cf2 (\cf5 \\zone5_play\cf2 , \{\cf3 |out, gate, buffer, dur, amp, pch1, pch2, pch3, wsz, dns, xang, yang, zang|\cf2   \
	\cf3 var\cf2  env, envdel, pitch, times, warps, w, x, y, z;\
	envdel = \cf3 ArrayControl\cf2 .kr(\cf5 \\envdel\cf2 , 4, 1);\
	warps = \cf3 ArrayControl\cf2 .kr(\cf5 \\warps\cf2 , 4, 1);\
	times = \cf3 ArrayControl\cf2 .kr(\cf5 \\times\cf2 , 4, 1);\
	pitch = [1, pch1, pch2, pch3];\
	#w, x, y, z = \cf3 A2B\cf2 .ar(\
		*\cf3 Array\cf2 .fill(4, \{\cf3 |i|\cf2 \
			\cf3 DelayN\cf2 .ar(\
				\cf3 Warp1\cf2 .ar(1, buffer, \cf3 LFSaw\cf2 .kr(warps@i, 1, 0.5, 0.5), pitch@i, wsz, -1, dns) \
					* \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 ([0.001, 1.0, 1.0, 0.001], [0.1, 0.8, 0.1], \cf5 \\sine\cf2 ), gate, timeScale: times@i), \
				envdel@i, \
				envdel@i\
			)\
		\})\
	) * \cf3 EnvGen\cf2 .kr(\cf3 Env\cf2 ([1, 1, 0], [0.9, 0.1], \cf5 \\sine\cf2 ), gate, timeScale: dur);\
	\cf3 Out\cf2 .ar(out, \cf3 AtkRotateXYZ\cf2 .ar(w, x, y, z, xang, yang, zang) * amp)\
\}).add;\
\
~bufs = ~loops.select(\{\cf3 |loop|\cf2  loop.path.contains(\cf4 "reloop"\cf2 ) \});\
\
~map = (\
	amp: \cf3 ExponentialWarp\cf2 (\cf3 ControlSpec\cf2 (0.04, 4.0)),\
	pch1: \cf3 CyclicWarp\cf2 (\cf3 ControlSpec\cf2 (35/36, 1.0)),\
	pch2: \cf3 CyclicWarp\cf2 (\cf3 ControlSpec\cf2 (1.0, 36/35)),\
	pch3: \cf3 CyclicWarp\cf2 (\cf3 ControlSpec\cf2 (35/36, 36/35)),\
	delg: \cf3 CosineWarp\cf2 (\cf3 ControlSpec\cf2 (1.01, 1.1)),\
	xang: \cf3 CyclicWarp\cf2 (\cf3 ControlSpec\cf2 (-pi, pi)),\
	yang: \cf3 CyclicWarp\cf2 (\cf3 ControlSpec\cf2 (pi, -pi)),\
	zang: \cf3 CyclicWarp\cf2 (\cf3 ControlSpec\cf2 (-pi, pi))\
);\
\
~cycle = 3;\
\
)\
\
\
~synths = \cf3 Array\cf2 .fill(8, \{\cf3 |i|\cf2 \
	\cf3 Synth\cf2 .tail(~agrp, \cf5 \\zone5_play\cf2 , [\cf5 \\out\cf2 , ~abus, \cf5 \\gate\cf2 , 0, \cf5 \\dur\cf2 , ~cycle - (4/24 * i), \cf5 \\buffer\cf2 , ~bufs[i], \cf5 \\amp\cf2 , 1.0, \
		\cf5 \\pch1\cf2 , 35/36, \cf5 \\pch2\cf2 , 36/35, \cf5 \\pch3\cf2 , 2**(1/19), \cf5 \\wsz\cf2 , 0.05, \cf5 \\dns\cf2 , 4, \cf5 \\xang\cf2 , 0, \cf5 \\yang\cf2 , 0, \cf5 \\zang\cf2 , 0 ])\
		.setn(\cf5 \\envdel\cf2 , [0] ++ \cf3 Array\cf2 .geom(3, 1/24, 2))\
		.setn(\cf5 \\warps\cf2 , \cf3 Array\cf2 .geom(4, 1, 15/17))\
		.setn(\cf5 \\times\cf2 , \cf3 Array\cf2 .series(4, ~cycle - (1/24 * i), (1/24).neg))\
\});\
\
\
~synths.do(\cf3 _\cf2 .set(\cf5 \\wsz\cf2 , 1/24*0.0625))\
\
~synths.do(\{\cf3 |syn, i|\cf2  syn.set(\cf5 \\buffer\cf2 , ~bufs[i+8]) \})\
\
~rout = \cf3 Routine\cf2 (\{\
	\cf3 inf\cf2 .do(\{\
		~synths.do(\{\cf3 |synth|\cf2 \
			synth.set(\cf5 \\gate\cf2 , 1.0);\
			(2/24).wait;\
			synth.set(\cf5 \\gate\cf2 , 0.0);\
			(2/24).wait;\
		\});\
		1.667.wait;\
	\})\
\}).play\
\
~rout.stop\
\
~synths[0].set(\cf5 \\gate\cf2 , 1)\
\
\
~synths.do(\cf3 _\cf2 .free)\
\
}